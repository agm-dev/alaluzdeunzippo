{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","listQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","IndexPage","props","postList","data","allMarkdownRemark","a","createElement","title","keywords","edges","map","_ref","i","node","to","fields","slug","className","frontmatter","date","excerpt","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","image","url","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Header","siteTitle","react_default","style","background","marginBottom","textTransform","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","Fragment","header","paddingTop","Date","getFullYear","href","target","rel","_755544856"],"mappings":"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","file":"component---src-pages-index-js-0ff41fb7ecd43a00e1a0.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\n\r\nconst IndexPage = props => {\r\n  const postList = props.data.allMarkdownRemark\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" keywords={[`agm-dev`, `blog`, `portfolio`, `development`]} />\r\n      {postList.edges.map(({ node }, i) => (\r\n        <Link to={node.fields.slug} className='link'>\r\n          <div className='post-list'>\r\n            <h1>{node.frontmatter.title}</h1>\r\n            <span className=\"date\">{node.frontmatter.date}</span>\r\n            <p>{node.excerpt}</p>\r\n          </div>\r\n        </Link>\r\n      ))}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const listQuery = graphql`\r\n  query ListQuery {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt(pruneLength: 250)\r\n          frontmatter {\r\n            date(formatString: \"DD/MM/YYYY\")\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title, image, url, pathname }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:image`,\r\n          content: image,\r\n        },\r\n        {\r\n          property: `og:url`,\r\n          content: pathname ? url + pathname : url,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `#444444`,\r\n      marginBottom: `1.45rem`,\r\n      textTransform: `uppercase`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `0px 1.0875rem 1.45rem`,\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          <main>{children}</main>\r\n          <footer className=\"footer\">\r\n            © 2011 - {new Date().getFullYear()}, Textos originales de\r\n            {` `}\r\n            <a href=\"https://github.com/agm-dev\" className=\"author\" target=\"_blank\" rel=\"noopener noreferrer\">Adrián Gonzalo</a>.\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}